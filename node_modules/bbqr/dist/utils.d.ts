import { Encoding, SplitOptions, Version } from './types';
export declare function hexToBytes(hex: string): Uint8Array<ArrayBuffer>;
export declare function base64ToBytes(base64: string): Uint8Array<ArrayBuffer>;
export declare function intToBase36(n: number): string;
export declare function fileToBytes(file: File): Promise<Uint8Array<ArrayBufferLike>>;
export declare function isValidVersion(v: number): v is Version;
export declare function isValidSplit(s: number): boolean;
export declare function validateSplitOptions(opts: SplitOptions): {
    readonly minVersion: 25 | 17 | 10 | 34 | 20 | 14 | 8 | 27 | 16 | 11 | 7 | 4 | 32 | 38 | 26 | 29 | 12 | 35 | 24 | 15 | 28 | 21 | 37 | 36 | 39 | 1 | 2 | 3 | 5 | 6 | 9 | 13 | 18 | 19 | 22 | 23 | 30 | 31 | 33 | 40;
    readonly maxVersion: 25 | 17 | 10 | 34 | 20 | 14 | 8 | 27 | 16 | 11 | 7 | 4 | 32 | 38 | 26 | 29 | 12 | 35 | 24 | 15 | 28 | 21 | 37 | 36 | 39 | 1 | 2 | 3 | 5 | 6 | 9 | 13 | 18 | 19 | 22 | 23 | 30 | 31 | 33 | 40;
    readonly minSplit: number;
    readonly maxSplit: number;
    readonly encoding: "H" | "Z" | "2";
};
export declare function looksLikePsbt(data: Uint8Array): boolean;
export declare function shuffled<T>(arr: T[]): T[];
export declare function versionToChars(v: Version): 25 | 77 | 47 | 224 | 114 | 154 | 195 | 279 | 335 | 395 | 468 | 535 | 619 | 667 | 758 | 854 | 938 | 1046 | 1153 | 1249 | 1352 | 1460 | 1588 | 1704 | 1853 | 1990 | 2132 | 2223 | 2369 | 2520 | 2677 | 2840 | 3009 | 3183 | 3351 | 3537 | 3729 | 3927 | 4087 | 4296;
export declare function encodeData(raw: Uint8Array, encoding?: Encoding): {
    encoding: "H";
    encoded: string;
} | {
    encoding: "Z" | "2";
    encoded: string;
};
export declare function decodeData(parts: string[], encoding: Encoding): Uint8Array<ArrayBufferLike>;
